##### DECLARATIONS #####
# Variables
variables:
  - group: IronDrawingVersions
  - name: Configuration
    value: 'Debug'
  - name: AssemblyVersion
    value: 1.0.0.$(Build.BuildID)
# Build Trigger
trigger:
    branches:
      include:
      - master
# Virtual Machine
pool:
  vmImage: 'windows-latest'
##### STEPS #####
stages:
## Compile
- stage: BuildDrawingLibraries
  displayName: Build IronSoftware.Drawing Libraries
  dependsOn: []
  jobs:
    - job: BuildDrawingLibraries
      steps:
      # Checkout Repo
      - checkout: self
        displayName: Checkout IronSoftware.Drawing repository
        lfs: true
      # Build
      - task: DotNetCoreCLI@2
        displayName: Restore Solution NuGet Packages
        enabled: true
        continueOnError: true
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)/IronSoftware.Drawing/IronSoftware.CommonLibraries.sln'
          verbosityRestore: Minimal
          feedsToUse: 'config'
          nugetConfigPath: '$(Build.SourcesDirectory)/IronSoftware.Drawing/nuget.config'
      - task: DotNetCoreCLI@2
        displayName: Build Drawing Libraries Solution
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/IronSoftware.Drawing/IronSoftware.CommonLibraries.sln'
          arguments: '--configuration $(Configuration) --no-restore --verbosity normal'
          versioningScheme: byEnvVar
          versionEnvVar: AssemblyVersion
      # Publish Pipeline Artifacts
      - task: PublishPipelineArtifact@1
        displayName: Publish IronDrawing Test Assemblies
        inputs:
          targetPath: '$(Build.SourcesDirectory)/IronSoftware.Drawing/IronSoftware.Drawing.Common.Tests/bin/$(Configuration)'
          artifact: 'IronDrawingTests'
          publishLocation: 'pipeline'
      - task: PublishPipelineArtifact@1
        displayName: Publish IronDrawing Assemblies
        inputs:
          targetPath: '$(Build.SourcesDirectory)/IronSoftware.Drawing/bin/$(Configuration)'
          artifact: 'IronDrawingAssemblies'
          publishLocation: 'pipeline'
      - task: PublishPipelineArtifact@1
        displayName: Publish IronDrawing NuGet Files
        inputs:
          targetPath: 'NuGet'
          artifact: 'IronDrawingNuGet'
          publishLocation: 'pipeline'
## Test Windows
- stage: WindowsTests
  pool:
    vmImage: 'windows-latest'
  displayName: Execute Windows Tests
  dependsOn: BuildDrawingLibraries
  jobs:
  # Windows x64 Tests
  - job: Windowsx64Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: DotNetCoreCLI@2
      displayName: Execute Windows (.NET x64) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net472/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net472" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net472\testhost.log"'
        testRunTitle: 'Windows (.NET x64) Tests'
        publishTestResults: true
  # Windows x86 Tests
  - job: Windowsx86Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: DotNetCoreCLI@2
      displayName: Execute Windows (.NET x86) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net472/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.x86.runsettings --framework "net472" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net472\testhost.log"'
        testRunTitle: 'Windows (.NET x86) Tests'
        publishTestResults: true
  # Windows .NET Core Tests
  - job: WindowsNetCoreTests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: DotNetCoreCLI@2
      displayName: Execute Windows (.NET Core) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/netcoreapp3.1/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "netcoreapp3.1" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\netcoreapp3.1\testhost.log"'
        testRunTitle: 'Windows (.NET Core) Tests'
        publishTestResults: true
  # Windows .NET 6.0 Tests
  - job: WindowsNet60Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
    - task: DotNetCoreCLI@2
      displayName: Execute Windows (.NET 6.0) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net60/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net60" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net60\testhost.log"'
        testRunTitle: 'Windows (.NET 6.0) Tests'
        publishTestResults: true
  # Windows .NET 7.0 Tests
  - job: WindowsNet70Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: 'sdk'
        version: '7.0.x'
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: Execute Windows (.NET 7.0) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net70/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net70" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net70\testhost.log"'
        testRunTitle: 'Windows (.NET 7.0) Tests'
        publishTestResults: true
## Test Linux
- stage: LinuxTests
  pool:
    vmImage: 'ubuntu-18.04'
  displayName: Execute Linux Tests
  dependsOn: BuildDrawingLibraries
  jobs:
  - job: LinuxNetCoreTests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: DotNetCoreCLI@2
      displayName: Execute Linux (.NET Core) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/netcoreapp3.1/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "netcoreapp3.1" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\netcoreapp3.1\testhost.log"'
        testRunTitle: 'Linux (.NET Core) Tests'
        publishTestResults: true
  - job: LinuxNet60Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: UseDotNet@2
      inputs:
        version: '6.x'
        packageType: runtime
    - task: DotNetCoreCLI@2
      displayName: Execute Linux (.NET 6.0) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net60/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net60" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net60\testhost.log"'
        testRunTitle: 'Linux (.NET 6.0) Tests'
        publishTestResults: true
  - job: LinuxNet70Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: UseDotNet@2
      inputs:
        version: '7.x'
        packageType: runtime
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: Execute Linux (.NET 7.0) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net70/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net70" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net70\testhost.log"'
        testRunTitle: 'Linux (.NET 6.0) Tests'
        publishTestResults: true
## Test MacOs
- stage: MacOsTests
  pool:
    vmImage: 'macOS-10.15'
  displayName: Execute MacOs Tests
  dependsOn: BuildDrawingLibraries
  jobs:
  - job: MacOsNetCoreTests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: DotNetCoreCLI@2
      displayName: Execute MacOs (.NET Core) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/netcoreapp3.1/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "netcoreapp3.1" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\netcoreapp3.1\testhost.log"'
        testRunTitle: 'MacOs (.NET Core) Tests'
        publishTestResults: true
  - job: MacOsNet60Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: UseDotNet@2
      inputs:
        version: '6.x'
        packageType: runtime
    - task: DotNetCoreCLI@2
      displayName: Execute MacOs (.NET 6.0) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net60/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net60" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net60\testhost.log"'
        testRunTitle: 'MacOs (.NET 6.0) Tests'
        publishTestResults: true
  - job: MacOsNet70Tests
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingTests'
        targetPath: 'IronDrawingTests'
    - task: UseDotNet@2
      inputs:
        version: '7.x'
        packageType: runtime
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: Execute MacOs (.NET 7.0) Tests
      inputs:
        command: 'test'
        projects: 'IronDrawingTests/bin/$(Configuration)/net70/IronSoftware.Drawing.Common.Tests.dll'
        arguments: '-s IronDrawingTests/tests.runsettings --framework "net70" -v d --blame --blame-hang --blame-crash --blame-hang-timeout 7m --diag:"$(Agent.BuildDirectory)\IronDrawingTests\bin\$(Configuration)\net70\testhost.log"'
        testRunTitle: 'MacOs (.NET 6.0) Tests'
        publishTestResults: true
## Push NuGet Package
- stage: DeployDrawingLibraries
  pool:
    vmImage: 'windows-latest'
  displayName: Deploy NuGet Package
  dependsOn:
    - WindowsTests
    - LinuxTests
    - MacOsTests
  jobs:
  - job: DeployDrawingLibraries
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingAssemblies'
        targetPath: 'bin/$(Configuration)'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'IronDrawingNuGet'
        targetPath: 'NuGet'
    - task: NuGetCommand@2
      displayName: 'Build DrawingLibraries NuGet Package'
      inputs:
        command: 'pack'
        packagesToPack: 'NuGet/IronSoftware.Drawing.nuspec'
        configuration: $(Configuration)
        buildProperties: 'version=1.0.$(Build.BuildID)-ci;IncludeSymbols=true;SymbolPackageFormat=snupkg'
        includeSymbols: true
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'ac7dfa01-e357-472b-9830-d5cd55e71bdd/5aac0020-09d2-4b2e-a77e-47f173a1ffd6'
        includeSymbols: true
    - task: PublishSymbols@2
      inputs:
        SearchPattern: '**/*.pdb'
        indexSources: true
        publishSymbols: true
        symbolServerType: TeamServices
        detailedLog: true